#!/usr/bin/env bash
#
# Script to build the Landing Page.
#

# Export environment variables
export TRANSLATION_BRANCH="${TRANSLATION_BRANCH:-onion-support-landing-page}"
export LEKTOR_FOREGROUND_COLOR="${LEKTOR_FOREGROUND_COLOR:-CF5C00}"
export LEKTOR_BACKGROUND_COLOR="${LEKTOR_BACKGROUND_COLOR:-EA6903}"
export LEKTOR_BUTTON_COLOR="${LEKTOR_BUTTON_COLOR:-A6903}"
export LEKTOR_ONION_URL_LOCK_FILTER="${LEKTOR_ONION_URL_LOCK_FILTER:-invert(43%) sepia(95%) saturate(2236%) hue-rotate(4deg) brightness(97%) contrast(98%);}"
export LEKTOR_ONION_URL="${LEKTOR_ONION_URL:-https://abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz1234.onion}"
export LEKTOR_SERVICE_NAME="${LEKTOR_SERVICE_NAME:-Service Name}"
export LEKTOR_SERVICE_URL="${LEKTOR_SERVICE_URL:-https://service-url.website/}"
export LEKTOR_FAVICON="${LEKTOR_FAVICON}"

# Ensure we have an extended PATH if lektor is installed locally
if [ -e "$HOME/.local/bin/lektor" ]; then
  export PATH="$PATH:$HOME/.local/bin"
fi

# Check for Lektor
if ! which lektor &> /dev/null; then
  echo "Please install lektor"
  exit 1
fi

# Cleanup
echo "Cleaning up previous builds..."
rm -f content/contents+*.lr
#rm -rf public
lektor clean --yes --output-path public || exit 1

# Ensure a fresh i18n repository in place
if [ ! -d "i18n" ]; then
  git clone https://gitlab.torproject.org/tpo/translation.git i18n
else
  rm -rf i18n/_compiled && rm -f i18n/contents+*
  ( cd i18n &> /dev/null && git restore . && git checkout -q ${TRANSLATION_BRANCH} && git pull )
fi

# Build
echo "Building..."
lektor build --output-path public
exit $?
